{"version":3,"sources":["components/JsonViewer/index.js","config/jellyFish.js","components/CreateToken/index.js","components/TokenListing/index.js","App.js","reportWebVitals.js","index.js"],"names":["JsonViewer","content","className","client","require","Client","process","timeout","CreateToken","useState","setContent","name","setName","symbol","setSymbol","create","e","a","preventDefault","token","createToken","isDAT","mintable","tradeable","collateralAddress","res","console","log","toString","onSubmit","required","type","onChange","target","value","TokenListing","listTokens","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAMeA,EAJI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,sBAAKC,UAAU,aAAf,cAA8BD,MCExBE,EAJA,IADGC,EAAQ,IACGC,QAAOC,oGAA2B,CAC7DC,QAAS,MCkEIC,EAhEK,WAClB,MAA8BC,qBAA9B,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAwBD,qBAAxB,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA4BH,qBAA5B,mBAAOI,EAAP,KAAeC,EAAf,KAEMC,EAAM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAEE,iBADW,kBAGOf,EAAOgB,MAAMC,YAAY,CACzCP,OAAQA,EACRF,KAAMA,EACNU,OAAO,EACPC,UAAU,EACVC,WAAW,EACXC,kBAAmB,KATV,OAGLC,EAHK,OAWXC,QAAQC,IAAIF,GACZf,EAAWe,EAAIG,YAZJ,gDAcXF,QAAQC,IAAR,MACAjB,EAAW,KAAIkB,YAfJ,yDAAH,sDAkBZ,OACE,kCACE,qBAAK1B,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,+CACA,uBAAM2B,SAAUd,EAAhB,UACE,sBAAKb,UAAU,aAAf,UACE,yCACA,uBACE4B,UAAQ,EACRC,KAAK,OACLC,SAAU,SAAChB,GACTJ,EAAQI,EAAEiB,OAAOC,aAIvB,sBAAKhC,UAAU,aAAf,UACE,2CACA,uBACE4B,UAAQ,EACRC,KAAK,OACLC,SAAU,SAAChB,GACTF,EAAUE,EAAEiB,OAAOC,aAIzB,wBAAQH,KAAK,SAAS7B,UAAU,YAAhC,0BAKJ,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAYD,QAASA,cCvBlBkC,EAjCM,WACnB,MAA8B1B,qBAA9B,mBAAOR,EAAP,KAAgBS,EAAhB,KAEM0B,EAAU,uCAAG,4BAAAnB,EAAA,+EAEGd,EAAOgB,MAAMiB,aAFhB,OAETX,EAFS,OAGfC,QAAQC,IAAIF,GACZf,EAAWe,EAAIG,YAJA,gDAMfF,QAAQC,IAAI,YAAZ,MACAjB,EAAW,KAAIkB,YAPA,yDAAH,qDAWhB,OACE,kCACE,qBAAK1B,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,6CACA,wBAAQ6B,KAAK,SAAS7B,UAAU,YAAYmC,QAASD,EAArD,wBAIF,qBAAKlC,UAAU,qBAAf,SACE,cAAC,EAAD,CAAYD,QAASA,cCXlBqC,MAdf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qEAGJ,cAAC,EAAD,IACA,cAAC,EAAD,QCDSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8bc1719d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst JsonViewer = ({ content }) => {\n  return <div className=\"jsonViewer\"> {content}</div>;\n};\n\nexport default JsonViewer;\n","const jellyfish = require(\"@defichain/jellyfish\");\nconst client = new jellyfish.Client(process.env.REACT_APP_URI, {\n  timeout: 20000,\n});\n\nexport default client;\n","import React, { useState } from \"react\";\nimport JsonViewer from \"../JsonViewer\";\nimport client from \"../../config/jellyFish\";\n\nconst CreateToken = () => {\n  const [content, setContent] = useState();\n  const [name, setName] = useState();\n  const [symbol, setSymbol] = useState();\n\n  const create = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await client.token.createToken({\n        symbol: symbol,\n        name: name,\n        isDAT: false,\n        mintable: true,\n        tradeable: true,\n        collateralAddress: \"\",\n      });\n      console.log(res);\n      setContent(res.toString());\n    } catch (err) {\n      console.log(err);\n      setContent(err.toString());\n    }\n  };\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-4\">\n            <h3>Create Token </h3>\n            <form onSubmit={create}>\n              <div className=\"form-group\">\n                <label>Name</label>\n                <input\n                  required\n                  type=\"text\"\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <div className=\"form-group\">\n                <label>Symbol</label>\n                <input\n                  required\n                  type=\"text\"\n                  onChange={(e) => {\n                    setSymbol(e.target.value);\n                  }}\n                ></input>\n              </div>\n              <button type=\"submit\" className=\"btn btn-s\">\n                Create\n              </button>\n            </form>\n          </div>\n          <div className=\"col-sm-12 col-md-8\">\n            <JsonViewer content={content} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CreateToken;\n","import React, { useState } from \"react\";\nimport JsonViewer from \"../JsonViewer\";\nimport client from \"../../config/jellyFish\";\n\nconst TokenListing = () => {\n  const [content, setContent] = useState();\n\n  const listTokens = async () => {\n    try {\n      const res = await client.token.listTokens();\n      console.log(res);\n      setContent(res.toString());\n    } catch (err) {\n      console.log(\"Error => \", err);\n      setContent(err.toString());\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-4 section-h\">\n            <h3>List Tokens</h3>\n            <button type=\"button\" className=\"btn btn-s\" onClick={listTokens}>\n              Listing\n            </button>\n          </div>\n          <div className=\"col-sm-12 col-md-8\">\n            <JsonViewer content={content} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TokenListing;\n","import \"./App.css\";\nimport CreateToken from \"./components/CreateToken\";\nimport TokenListing from \"./components/TokenListing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container header\">\n        <div className=\"row\">\n          <h2>Demo-JellyFish (Test Container)</h2>\n        </div>\n      </div>\n      <TokenListing />\n      <CreateToken />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}